package com.mycompany.picnicdestination;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;

public class ChooseDestination extends javax.swing.JFrame {

    private ResultSet ResultSetDb = null;
    private PreparedStatement PreparedStatementDb = null;
    private String Username = null;
    private Connection ConnectionDb = null;
    private final String INSERT_TICKET_SQL = "INSERT INTO TicketTbl"
            + "  (username, picnic_name, venue, price, date_of_order) VALUES "
            + " (?,?,?,?,?);";
    private final String DISPLAY_DESTINATION_SQL = "SELECT * FROM ValidlocationTbl ORDER BY venue ASC";
    private final String DISPLAY_PICNIC_SQL = "SELECT picnic_name FROM DestinationTbl WHERE venue = ? ORDER BY venue ASC";
    private final String DISPLAY_PRICE_SQL = "SELECT price FROM DestinationTbl WHERE picnic_name = ?";

    private DefaultListModel ListModel = new DefaultListModel();

    /**
     * Creates new form ChooseDestination
     */
    public ChooseDestination() {
        initComponents();
        System.out.println(Username + " from tf construct");
    }

    public ChooseDestination(String username) {
        initComponents();
        this.Username = username;
        jListLocation.setModel(ListModel);
        listData();
    }

    private void listData() {
        try {
            ConnectionDb = SingleConnection.getConnection();
            PreparedStatementDb = ConnectionDb.prepareStatement(DISPLAY_DESTINATION_SQL);
            ResultSetDb = PreparedStatementDb.executeQuery();
            while (ResultSetDb.next()) {
                String venue = ResultSetDb.getString("venue");
                jComboLocation.addItem(venue);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            // finally block used to close resources
            SingleConnection.closeStatement(PreparedStatementDb);
            SingleConnection.closeResultSet(ResultSetDb);
        }// end try
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ticketsHeader = new javax.swing.JLabel();
        buttonPreviousTicket = new javax.swing.JButton();
        jTxtReceipt = new javax.swing.JScrollPane();
        jTxtAnswer = new javax.swing.JTextArea();
        jBtnBook = new javax.swing.JButton();
        fromLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListLocation = new javax.swing.JList<>();
        jLabelRandom = new javax.swing.JLabel();
        fromLabel2 = new javax.swing.JLabel();
        jTxtPrice = new javax.swing.JLabel();
        fromLabel4 = new javax.swing.JLabel();
        jComboLocation = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ticketsHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ticketsHeader.setText("Book Tickets");

        buttonPreviousTicket.setText("View previous tickets");
        buttonPreviousTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPreviousTicketActionPerformed(evt);
            }
        });

        jTxtAnswer.setColumns(20);
        jTxtAnswer.setRows(5);
        jTxtReceipt.setViewportView(jTxtAnswer);

        jBtnBook.setText("Book it!");
        jBtnBook.setEnabled(false);
        jBtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBookActionPerformed(evt);
            }
        });

        fromLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fromLabel.setText("Picnic Destination");

        jListLocation.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListLocation.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListLocationValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListLocation);

        jLabelRandom.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelRandom.setText("Receipt");

        fromLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fromLabel2.setText("Total Cost");

        jTxtPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTxtPrice.setText("0");

        fromLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fromLabel4.setText("Venue");

        jComboLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));
        jComboLocation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboLocationItemStateChanged(evt);
            }
        });
        jComboLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jBtnBook)
                .addGap(40, 40, 40)
                .addComponent(buttonPreviousTicket)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ticketsHeader)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fromLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fromLabel2)
                                .addGap(46, 46, 46)
                                .addComponent(jTxtPrice))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRandom))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ticketsHeader)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRandom)
                            .addComponent(fromLabel4)
                            .addComponent(jComboLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(fromLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromLabel2)
                    .addComponent(jTxtPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnBook)
                    .addComponent(buttonPreviousTicket)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPreviousTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviousTicketActionPerformed
        openPrevTicketFrame();
    }//GEN-LAST:event_buttonPreviousTicketActionPerformed

    private void jBtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBookActionPerformed
        int random = (int) (Math.random() * 4321);
        String randomValue = String.valueOf(random);
        jLabelRandom.setText("Receipt " + randomValue);
        String picnic = jListLocation.getSelectedValue();
        String venue = jComboLocation.getSelectedItem().toString();
        double price = Double.parseDouble(jTxtPrice.getText());
        String pattern = "dd/MM/YYYY";
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        String dateOfOrder = simpleDateFormat.format(date);
        String receipt = "Name: " + Username + "\nVenue: " + venue + "\nPicnic Name: " + picnic + "\nPrice: " + price + "\nDate of Order: " + dateOfOrder;
        PrintWriter fileHandle = null;
        try {
            fileHandle = new PrintWriter(Username + " receipt going to " + picnic + randomValue + ".txt");
            fileHandle.println(receipt);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } finally {
            if (fileHandle != null) {
                fileHandle.close();
            }
        }
        try {
            Timestamp orderTime = Timestamp.from(Instant.now());
            ConnectionDb = SingleConnection.getConnection();
            PreparedStatementDb = ConnectionDb.prepareStatement(INSERT_TICKET_SQL);
            PreparedStatementDb.setString(1, Username);
            PreparedStatementDb.setString(2, picnic);
            PreparedStatementDb.setString(3, venue);
            PreparedStatementDb.setDouble(4, price);
            PreparedStatementDb.setTimestamp(5, orderTime);
            PreparedStatementDb.executeUpdate();
            ConnectionDb.commit();
            jTxtAnswer.setText(receipt);
            jBtnBook.setEnabled(false);
            jComboLocation.setSelectedIndex(0);
        } catch (SQLException ex) {
            if (ConnectionDb != null) {
                try {
                    ConnectionDb.rollback();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            ex.printStackTrace();
        } finally {
            // finally block used to close resources
            SingleConnection.closeStatement(PreparedStatementDb);
            SingleConnection.closeResultSet(ResultSetDb);
        }// end try
    }//GEN-LAST:event_jBtnBookActionPerformed

    private void jListLocationValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListLocationValueChanged
        String selectedValue = jListLocation.getSelectedValue();
        if (jListLocation.getSelectedIndex() != -1) {
            jBtnBook.setEnabled(true);
            try {
                ConnectionDb = SingleConnection.getConnection();
                PreparedStatementDb = ConnectionDb.prepareStatement(DISPLAY_PRICE_SQL);
                PreparedStatementDb.setString(1, selectedValue);
                ResultSetDb = PreparedStatementDb.executeQuery();
                while (ResultSetDb.next()) {
                    double price = ResultSetDb.getDouble("price");
                    jTxtPrice.setText(String.valueOf(price));
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                // finally block used to close resources
                SingleConnection.closeStatement(PreparedStatementDb);
                SingleConnection.closeResultSet(ResultSetDb);
            }// end try
        } else {
            jBtnBook.setEnabled(false);
            jTxtPrice.setText("0");
        }

    }//GEN-LAST:event_jListLocationValueChanged

    private void jComboLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboLocationActionPerformed
        ListModel.removeAllElements();
        if (jComboLocation.getSelectedIndex() > 0) {
            jTxtAnswer.setText("");
            jLabelRandom.setText("Receipt");
            String selectedValue = jComboLocation.getSelectedItem().toString();
            List<String> picnics = getAllPicnic(selectedValue);
            for (String picnic : picnics) {
                ListModel.addElement(picnic);
            }
        }
    }//GEN-LAST:event_jComboLocationActionPerformed

    private void jComboLocationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboLocationItemStateChanged

    }//GEN-LAST:event_jComboLocationItemStateChanged

    private List<String> getAllPicnic(String selectedValue) {
        List<String> picnics = new ArrayList<>();
        try {
            ConnectionDb = SingleConnection.getConnection();
            PreparedStatementDb = ConnectionDb.prepareStatement(DISPLAY_PICNIC_SQL);
            PreparedStatementDb.setString(1, selectedValue);
            ResultSetDb = PreparedStatementDb.executeQuery();
            while (ResultSetDb.next()) {
                String picnicName = ResultSetDb.getString("picnic_name");
                picnics.add(picnicName);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            // finally block used to close resources
            SingleConnection.closeStatement(PreparedStatementDb);
            SingleConnection.closeResultSet(ResultSetDb);
        }// end try
        return picnics;
    }

    private void openPrevTicketFrame() {
        setVisible(false);
        new PreviousTicketForm(Username).setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseDestination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChooseDestination().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPreviousTicket;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel fromLabel2;
    private javax.swing.JLabel fromLabel4;
    private javax.swing.JButton jBtnBook;
    private javax.swing.JComboBox<String> jComboLocation;
    private javax.swing.JLabel jLabelRandom;
    private javax.swing.JList<String> jListLocation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTxtAnswer;
    private javax.swing.JLabel jTxtPrice;
    private javax.swing.JScrollPane jTxtReceipt;
    private javax.swing.JLabel ticketsHeader;
    // End of variables declaration//GEN-END:variables
}
