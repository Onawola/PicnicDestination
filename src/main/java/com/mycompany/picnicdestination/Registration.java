package com.mycompany.picnicdestination;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Registration extends javax.swing.JFrame {

    private Connection ConnectionDb = null;
    private PreparedStatement PreparedStatementDb = null;
    private ResultSet ResultSetDb = null;
    private final String INSERT_USER_SQL = "INSERT INTO UserLoginTbl"
            + "  (username, fullname, age, current_address, pass) VALUES "
            + " (?,?,?,?,?);";
    private final String UPDATE_USER_SQL = "UPDATE UserLoginTbl "
            + "SET fullname=?, age=?, current_address=?, pass=? "
            + "WHERE username = ?";
    private final String SEARCH_USER_SQL = "SELECT fullname, age, current_address FROM UserLoginTbl WHERE username = ?";

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signUpHeader = new javax.swing.JLabel();
        labelUserName = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelAge = new javax.swing.JLabel();
        labelAddress = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        jBtnSignUp = new javax.swing.JButton();
        buttonLogIn = new javax.swing.JButton();
        textUserName = new javax.swing.JTextField();
        textName = new javax.swing.JTextField();
        textAge = new javax.swing.JTextField();
        textAddress = new javax.swing.JTextField();
        textPassword = new javax.swing.JPasswordField();
        jBtnUpdate = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        jBtnAdminLogin = new javax.swing.JButton();
        jBtnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signUpHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        signUpHeader.setText("Login/Signup");

        labelUserName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelUserName.setText("Username");

        labelName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelName.setText("Full Name");

        labelAge.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelAge.setText("Age");

        labelAddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelAddress.setText("Current Address");

        labelPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelPassword.setText("Password");

        jBtnSignUp.setText("Sign up");
        jBtnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSignUpActionPerformed(evt);
            }
        });

        buttonLogIn.setText("Login");
        buttonLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogInActionPerformed(evt);
            }
        });

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        jBtnUpdate.setText("Update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        jBtnAdminLogin.setText("Admin Login");
        jBtnAdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAdminLoginActionPerformed(evt);
            }
        });

        jBtnSearch.setText("Search");
        jBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signUpHeader)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelName)
                            .addComponent(labelUserName)
                            .addComponent(labelAge)
                            .addComponent(labelAddress)
                            .addComponent(labelPassword))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textPassword)
                            .addComponent(textAddress)
                            .addComponent(textAge)
                            .addComponent(textUserName)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBtnSignUp)
                                    .addComponent(buttonLogIn))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBtnAdminLogin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonClear))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(jBtnSearch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                        .addComponent(jBtnUpdate)))))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(signUpHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelUserName)
                    .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAge)
                    .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddress)
                    .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnSignUp)
                    .addComponent(jBtnSearch)
                    .addComponent(jBtnUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAdminLogin)
                    .addComponent(buttonLogIn)
                    .addComponent(buttonClear))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSignUpActionPerformed
        insert();
    }//GEN-LAST:event_jBtnSignUpActionPerformed

    private void buttonLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogInActionPerformed
        openLoginFrame();
    }//GEN-LAST:event_buttonLogInActionPerformed

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
        update();
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        clear();
    }//GEN-LAST:event_buttonClearActionPerformed

    private void textNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_textNameActionPerformed
    {//GEN-HEADEREND:event_textNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameActionPerformed

    private void jBtnAdminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAdminLoginActionPerformed
        openAdminLoginFrame();
    }//GEN-LAST:event_jBtnAdminLoginActionPerformed

    private void jBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSearchActionPerformed
        search();
    }//GEN-LAST:event_jBtnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonLogIn;
    private javax.swing.JButton jBtnAdminLogin;
    private javax.swing.JButton jBtnSearch;
    private javax.swing.JButton jBtnSignUp;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUserName;
    private javax.swing.JLabel signUpHeader;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextField textName;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextField textUserName;
    // End of variables declaration//GEN-END:variables

    private void insert() {
        String username = textUserName.getText().trim();
        String fullName = textName.getText().trim();
        String address = textAddress.getText().trim();
        char[] pass = textPassword.getPassword();
        String password = new String(pass);
        try {
            Integer age = Integer.parseInt(textAge.getText());
            try {
                ConnectionDb = SingleConnection.getConnection();
                PreparedStatementDb = ConnectionDb.prepareStatement(INSERT_USER_SQL);
                PreparedStatementDb.setString(1, username);
                PreparedStatementDb.setString(2, fullName);
                PreparedStatementDb.setInt(3, age);
                PreparedStatementDb.setString(4, address);
                PreparedStatementDb.setString(5, password);
                PreparedStatementDb.executeUpdate();
                ConnectionDb.commit();
                JOptionPane.showMessageDialog(jBtnSignUp, "Data Saved Successfully");
                clear();
            } catch (SQLException e) {
                if (ConnectionDb != null) {
                    try {
                        ConnectionDb.rollback();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
                e.printStackTrace();
            } finally {
                // finally block used to close resources
                SingleConnection.closeStatement(PreparedStatementDb);
            }// end try
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jBtnSignUp, "Enter a valid age");
        }
    }

    private void update() {
        String username = textUserName.getText().trim();
        String fullName = textName.getText().trim();
        String address = textAddress.getText().trim();
        char[] pass = textPassword.getPassword();
        String password = new String(pass);
        try {
            Integer age = Integer.parseInt(textAge.getText());
            try {
                ConnectionDb = SingleConnection.getConnection();
                PreparedStatementDb = ConnectionDb.prepareStatement(UPDATE_USER_SQL);
                PreparedStatementDb.setString(1, fullName);
                PreparedStatementDb.setInt(2, age);
                PreparedStatementDb.setString(3, address);
                PreparedStatementDb.setString(4, password);
                PreparedStatementDb.setString(5, username);
                PreparedStatementDb.executeUpdate();
                ConnectionDb.commit();
                JOptionPane.showMessageDialog(jBtnUpdate, "Data Saved");
                clear();
            } catch (Exception e) {
                e.printStackTrace();
                if (ConnectionDb != null) {
                    try {
                        // Roll back transaction
                        ConnectionDb.rollback();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            } finally {
                // finally block used to close resources
                SingleConnection.closeStatement(PreparedStatementDb);
            }// end try
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(jBtnUpdate, "Enter a valid age");
        }
    }

    private void search() {
        String username = textUserName.getText().trim();
        try {
            ConnectionDb = SingleConnection.getConnection();
            PreparedStatementDb = ConnectionDb.prepareStatement(SEARCH_USER_SQL);
            PreparedStatementDb.setString(1, username);
            ResultSetDb = PreparedStatementDb.executeQuery();
            if (ResultSetDb.next() == false) {
                JOptionPane.showMessageDialog(jBtnSearch, "No Data Found");
            } else {
                String fullname = ResultSetDb.getString("fullname");
                int age = ResultSetDb.getInt("age");
                String address = ResultSetDb.getString("current_address");
                textName.setText(fullname);
                textAge.setText(String.valueOf(age));
                textAddress.setText(address);
                JOptionPane.showMessageDialog(jBtnSearch, "Data Found");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            SingleConnection.closeStatement(PreparedStatementDb);
            SingleConnection.closeResultSet(ResultSetDb);
        }// end try
    }

    private void clear() {
        textUserName.setText("");
        textName.setText("");
        textAge.setText("");
        textAddress.setText("");
        textPassword.setText("");
    }

    private void openLoginFrame() {
        setVisible(false);
        new Login().setVisible(true);
    }

    private void openAdminLoginFrame() {
        setVisible(false);
        new AdminLogin().setVisible(true);
    }
}
